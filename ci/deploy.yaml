#file: noinspection YAMLSchemaValidation
logsBucket: cinnes-dev-platform-cloudbuild-logs
images: [ gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA ]
substitutions:
  _GCS_CACHE_BUCKET: cinnes-dev-build-cache

availableSecrets:
  secretManager:
    - versionName: projects/$PROJECT_ID/secrets/health-ingest-key/versions/latest
      env: HEALTH_INGEST_KEY
    - versionName: projects/$PROJECT_ID/secrets/sentry-auth-token/versions/latest
      env: SENTRY_AUTH_TOKEN
    - versionName: projects/$PROJECT_ID/secrets/influx-token/versions/latest
      env: INFLUX_TOKEN

steps:

  - id: 'tf-apply'
    waitFor:
      - '-'
    name: hashicorp/terraform:1.0.0
    entrypoint: sh
    args:
      - -c
      - terraform apply --auto-approve ./terraform

  # Load the cached files from GCS if they exist.
  - id: 'pull-down-cache'
    waitFor:
      - '-'
    name: gcr.io/cloud-builders/gsutil
    dir: /root
    entrypoint: bash
    args:
      - -c
      - |
        (
          gsutil cp gs://${_GCS_CACHE_BUCKET}/${REPO_NAME}-m2-cache.tar.gz /tmp/m2-cache.tar.gz &&
          tar -xzf /tmp/m2-cache.tar.gz
        ) || echo 'Cache not found'
    volumes:
      - name: user.home
        path: /root

  - id: 'build-project'
    waitFor:
      - 'pull-down-cache'
    name: gcr.io/cloud-builders/mvn
    entrypoint: mvn
    args: [ package,  -Dmaven.test.skip=true ]
    volumes:
      - name: user.home
        path: /root

  - id: 'create-docker-image'
    waitFor:
      - 'build-project'
    name: gcr.io/cloud-builders/docker
    args: [
      build,
      -t, gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA,
      -f, src/main/docker/Dockerfile.jvm,
      .
    ]

  - id: 'push-to-gcr'
    waitFor:
      - 'create-docker-image'
    name: gcr.io/cloud-builders/docker
    args: [push, gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA]

  - id: 'deploy-to-cloud-run'
    waitFor:
      - 'push-to-gcr'
      - 'tf-apply'
    name: gcr.io/cloud-builders/gcloud
    entrypoint: bash
    args:
      - '-c'
      - |
        gcloud beta run deploy $REPO_NAME \
          --image gcr.io/$PROJECT_ID/$REPO_NAME:$COMMIT_SHA \
          --region us-east1 \
          --project $PROJECT_ID \
          --set-env-vars HEALTH_INGEST_KEY=$$HEALTH_INGEST_KEY \
          --set-env-vars SENTRY_AUTH_TOKEN=$$SENTRY_AUTH_TOKEN \
          --set-env-vars INFLUX_TOKEN=$$INFLUX_TOKEN \
          --set-env-vars QUARKUS_LOG_SENTRY_RELEASE=$BUILD_ID
    secretEnv: [
      'HEALTH_INGEST_KEY',
      'SENTRY_AUTH_TOKEN',
      'INFLUX_TOKEN'
    ]

  # Saves the files to the GCS cache.
  - id: 'push-up-cache'
    waitFor:
      - 'build-project'
    name: gcr.io/cloud-builders/gsutil
    dir: /root
    entrypoint: bash
    # Caches the local Maven repository.
    args:
      - -c
      - |
        set -ex
        tar -czf /tmp/m2-cache.tar.gz .m2 &&
        gsutil cp /tmp/m2-cache.tar.gz gs://${_GCS_CACHE_BUCKET}/${REPO_NAME}-m2-cache.tar.gz
    volumes:
      - name: user.home
        path: /root